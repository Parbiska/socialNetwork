{"version":3,"file":"static/js/510.4b9fcfc1.chunk.js","mappings":"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","sources":["components/Profile/Profile.module.css","webpack://first/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://first/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://first/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","webpack://first/./src/components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css?c3a9","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","webpack://first/./src/components/Profile/ProfileInfo/Contact/Contact.module.css?1e8e","components/Profile/ProfileInfo/Contact/Contact.jsx","webpack://first/./src/components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.module.css?9ff0","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__qIUwz\",\"posts__new\":\"MyPosts_posts__new__T4lXp\",\"posts__area\":\"MyPosts_posts__area__5COOn\",\"posts__button\":\"MyPosts_posts__button__IuRVy\",\"posts__button_reset\":\"MyPosts_posts__button_reset__fUmcw\"};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__C65zc\",\"name\":\"Post_name__R4YdT\",\"img\":\"Post_img__e+v2H\"};","import styles from './Post.module.css';\r\nimport userPhoto from '../../../../assets/images/avatar.png';\r\n\r\nconst Post = ({ photo, likesCount, message, name }) => (\r\n    <div className={styles.post}>\r\n        <img className={styles.img} src={photo || userPhoto} alt=\"user\" />\r\n        <div className={styles.text}>\r\n            <div className={styles.name}>{name}</div>\r\n            {message}\r\n            <div>Likes: {likesCount}</div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Post;","import styles from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { createField, Textarea } from '../../common/FormsControls/FormsControls';\r\nimport React from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst PostForm = props => {\r\n\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit} className={styles.posts__new}>\r\n\t\t\t{ createField('your news...', 'postText', [required, maxLength50], Textarea, { className: styles.posts__area }) }\r\n\t\t\t{/* <button type='reset' className={`${styles.posts__button} ${styles.posts__button_reset}`}>Reset</button> */}\r\n\t\t\t<button className={styles.posts__button}>Publish</button>\r\n\t\t</form>\r\n\t)\r\n};\r\n\r\nconst PostReduxForm = reduxForm({ form: 'newPost' })(PostForm);\r\n\r\nconst MyPosts = React.memo(({state, addPost}) => {\r\n\tconst onSubmit = formData => {\r\n\t\taddPost(formData.postText);\r\n\t}\r\n\r\n\tif (!state.profile) return <Preloader></Preloader>\r\n\r\n\tconst posts = state.posts.map(p => <Post name={state.profile.fullName} key={p.id} message={p.message} likesCount={p.likesCount} photo={!state.profile ? null : state.profile.photos.large }></Post>).reverse();\r\n\r\n\treturn (\r\n\t\t<div className={styles.posts}>\r\n\t\t\t<h2>My posts</h2>\r\n\t\t\t<PostReduxForm onSubmit={onSubmit}></PostReduxForm>\r\n\t\t\t{posts}\r\n\t\t</div>\r\n\t);\r\n});\r\n\r\nexport default MyPosts;","import MyPosts from './MyPosts';\r\nimport { addPost } from '../../../redux/profileReducer';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => ({ state: state.profilePage });\r\n\r\nexport default connect(mapStateToProps, { addPost })(MyPosts);","// extracted by mini-css-extract-plugin\nexport default {\"info__wallpaper\":\"ProfileInfo_info__wallpaper__ItSrr\",\"info__wrapper\":\"ProfileInfo_info__wrapper__vwuUe\",\"info__avatar\":\"ProfileInfo_info__avatar__xdlhd\",\"info__descr\":\"ProfileInfo_info__descr__UZjio\",\"info__name\":\"ProfileInfo_info__name__fioio\",\"preloader\":\"ProfileInfo_preloader__yvG5q\",\"img__wrapper\":\"ProfileInfo_img__wrapper__VzzKC\",\"img__uploader\":\"ProfileInfo_img__uploader__8cxg1\",\"text_bold\":\"ProfileInfo_text_bold__Np9CQ\",\"contacts\":\"ProfileInfo_contacts__XMsqo\",\"contacts__Item\":\"ProfileInfo_contacts__Item__uXhl6\",\"btn\":\"ProfileInfo_btn__SPNtT\",\"info__status\":\"ProfileInfo_info__status__3XN+m\"};","// extracted by mini-css-extract-plugin\nexport default {\"status\":\"ProfileStatus_status__mbk14\"};","import { useState, useEffect } from 'react';\r\nimport styles from './ProfileStatus.module.css';\r\n\r\nconst ProfileStatus = props => {\r\n\r\n    const [ editMode, setEditMode ] = useState(false);\r\n    const [ status, setStatus ] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => setEditMode(true);\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = e => setStatus(e.currentTarget.value);\r\n\r\n    return (\r\n        <div className={styles.status}>\r\n            {editMode ?\r\n                <input value={status} onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}/>\r\n                :\r\n                <span onDoubleClick={props.isAuthUserProfile ? activateEditMode : null}>{props.status || '------'}</span>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileStatus;","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"Contact_link__DYw5W\"};","import styles from './Contact.module.css';\r\n\r\nconst Contact = ({contactTitle,  contactValue}) => (\r\n    <li>\r\n        <a className={styles.link} rel=\"noreferrer\" href={contactValue} target='_blank'>{contactTitle[0].toUpperCase() + contactTitle.slice(1)}</a>\r\n    </li>\r\n)\r\n\r\nexport default Contact;","// extracted by mini-css-extract-plugin\nexport default {\"text_bold\":\"ProfileDataForm_text_bold__xIxgF\",\"textarea\":\"ProfileDataForm_textarea__b0Ytr\",\"input\":\"ProfileDataForm_input__WINyU\",\"contacts\":\"ProfileDataForm_contacts__E0HBF\",\"contact\":\"ProfileDataForm_contact__BC8Pi\",\"btn\":\"ProfileDataForm_btn__2vqVz\",\"summaryError\":\"ProfileDataForm_summaryError__luddW\"};","import { createField, Input, Textarea } from '../../../common/FormsControls/FormsControls';\r\nimport ProfileStatus from '../ProfileStatus/ProfileStatus';\r\nimport styles from './ProfileDataForm.module.css';\r\nimport { reduxForm } from 'redux-form';\r\nimport { maxLengthCreator } from '../../../../utils/validators/validators';\r\n\r\nconst maxLength80 = maxLengthCreator(80);\r\n\r\nconst ProfileDataForm = ({ handleSubmit, isAuthUserProfile, updateStatus, status, profile, error }) => {\r\n\r\n    const contacts = [];\r\n    for (const key in profile.contacts) {\r\n        contacts.push(<div key={key} className={styles.contact}>{`${key}: `}  {createField(key, `contacts.${key}`, [], Input, {className: styles.input})}</div>);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={styles.wrapper}>\r\n            <div className={styles.info__name}>\r\n                <span className={styles.text_bold}>Full Name: </span> \r\n                {createField('Full name', 'fullName', [], Input, {className: styles.input})}\r\n            </div>\r\n\r\n            <div>\r\n                <span className={styles.text_bold}>Status: </span>\r\n                <ProfileStatus isAuthUserProfile={isAuthUserProfile} updateStatus={updateStatus} status={status}></ProfileStatus>\r\n            </div>\r\n\r\n            <div>\r\n                <span className={styles.text_bold}>About me:</span> \r\n                <div>{createField('About Me', 'aboutMe', [maxLength80,], Textarea, {className: styles.textarea})}</div>\r\n            </div>\r\n\r\n            <div>\r\n                <span className={styles.text_bold}>Looking for a job:</span>\r\n                {createField('', 'lookingForAJob', [], Input, {className: styles.input_checkbox, type: 'checkbox'})}\r\n            </div>\r\n\r\n            <div>\r\n                <span className={styles.text_bold}>My professional skills: </span>\r\n                <div>{createField('My professional skills', 'lookingForAJobDescription', [maxLength80,], Textarea, {className: styles.textarea})}</div>\r\n            </div>\r\n\r\n            <div>\r\n                <span className={styles.text_bold}>Contacts:</span>\r\n                <div className={styles.contacts}>\r\n                    { contacts }\r\n                </div>\r\n            </div>\r\n            \r\n            {error && \r\n                <div className={styles.summaryError}>\r\n                    {error}\r\n                </div>\r\n            }\r\n\r\n            <div>\r\n                <button className={styles.btn}>Save</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default reduxForm({form: 'edit-profile'})(ProfileDataForm);","import styles from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\r\nimport userPhoto from '../../../assets/images/avatar.png';\r\nimport Contact from './Contact/Contact';\r\nimport ProfileDataForm from './ProfileDataForm/ProfileDataForm';\r\n\r\n\r\nconst ProfileData = props => {\r\n    const contacts = [];\r\n    for (const key in props.profile.contacts) {\r\n        const value = props.profile.contacts[key];\r\n        if (!!value) {\r\n            contacts.push(<Contact key={key} contactTitle={key} contactValue={value}></Contact>)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.info__descr}>\r\n            <div className={styles.info__name}>{props.profile.fullName}</div>\r\n            \r\n            <div className={styles.info__status}>\r\n                <span className={styles.text_bold}>Status:</span> <ProfileStatus isAuthUserProfile={props.isAuthUserProfile} updateStatus={props.updateStatus} status={props.status}></ProfileStatus>\r\n            </div>\r\n\r\n            {!props.profile.aboutMe ? null : <div>\r\n                <span className={styles.text_bold}>About me:</span> {props.profile.aboutMe}\r\n            </div>}\r\n\r\n            <div>\r\n                <span className={styles.text_bold}>Looking for a job:</span> {!!props.profile.lookingForAJob ? 'yes' : 'no'}\r\n            </div>\r\n\r\n            {!!props.profile.lookingForAJobDescription && <div><span className={styles.text_bold}>My professional skills: </span>{props.profile.lookingForAJobDescription}</div>}\r\n\r\n            {!!contacts.length && <div>\r\n                <span className={styles.text_bold}>Contacts:</span>\r\n                <ul className={styles.contacts}>\r\n                    {contacts}\r\n                </ul>\r\n            </div>}\r\n\r\n            {props.isAuthUserProfile && <div>\r\n                <button onClick={() => props.setEditMode(true)} className={styles.btn}>Edit</button>\r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ProfileInfo = ({ profile, isAuthUserProfile, updateStatus, status, savePhoto, saveProfile, editMode, setEditMode }) => {\r\n\r\n    if (!profile) {\r\n        return (\r\n            <div className={styles.preloader}>\r\n                <Preloader></Preloader>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    const onPhotoSelected = e => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = formData => {\r\n            saveProfile(formData);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.info}>\r\n            <img className={styles.info__wallpaper} src=\"https://helpx.adobe.com/content/dam/help/en/photoshop/using/convert-color-image-black-white/jcr_content/main-pars/before_and_after/image-before/Landscape-Color.jpg\" alt='user' />\r\n            <div className={styles.info__wrapper}>\r\n                <div className={styles.img__wrapper}>\r\n                    <img id='file-upload' src={profile.photos.large || userPhoto} alt=\"avatar\" className={styles.info__avatar} />\r\n                    {isAuthUserProfile && <label className={styles.img__uploader}>\r\n                        Upload img\r\n                        <input onChange={onPhotoSelected} type='file' />\r\n                    </label>}\r\n                </div>\r\n                {editMode \r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} isAuthUserProfile={isAuthUserProfile} updateStatus={updateStatus} status={status}></ProfileDataForm>\r\n                    : <ProfileData setEditMode={setEditMode} profile={profile} isAuthUserProfile={isAuthUserProfile} updateStatus={updateStatus} status={status}></ProfileData>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import styles from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = props => {\r\n    return (\r\n    <div className={styles.profile}>\r\n        <ProfileInfo editMode={props.editMode} setEditMode={props.setEditMode} saveProfile={props.saveProfile} isAuthUserProfile={props.isAuthUserProfile} status={props.status} updateStatus={props.updateStatus} profile={props.profile} savePhoto={props.savePhoto}></ProfileInfo>\r\n        {props.isAuthUserProfile ? <MyPostsContainer/> : null}\r\n    </div>\r\n);\r\n};\r\n\r\nexport default Profile;","import Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getProfile, getStatus, updateStatus, savePhoto, saveProfile, setEditMode } from './../../redux/profileReducer';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from '../../hoc/WithRouter';\r\nimport { useEffect, useState } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst ProfileContainer = ({ getStatus, getProfile, match, authUserId, isAuth, saveProfile, savePhoto, status, updateStatus, ...props }) => {\r\n\r\n    const [userId, setUserId] = useState(undefined);\r\n\r\n\r\n    useEffect(() => {\r\n        setUserId(match.params.userId || authUserId);\r\n        if (!!userId) {\r\n            getProfile(userId);\r\n            getStatus(userId);\r\n        } \r\n    }, [ userId, match.params.userId, authUserId, getStatus, getProfile ]);\r\n\r\n    if (!isAuth && !match.params.userId) return <Navigate to='/login'></Navigate>\r\n\r\n    return <Profile saveProfile={saveProfile} savePhoto={savePhoto} status={status} updateStatus={updateStatus} isAuthUserProfile={userId === authUserId} {...props}></Profile>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profilePage.profile,\r\n    editMode: state.profilePage.editMode,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose( withRouter, connect(mapStateToProps, { getProfile, getStatus, updateStatus, savePhoto, saveProfile, setEditMode }))(ProfileContainer);"],"names":["photo","likesCount","message","name","className","styles","src","userPhoto","alt","maxLength50","maxLengthCreator","PostReduxForm","reduxForm","form","props","onSubmit","handleSubmit","createField","required","Textarea","React","state","addPost","profile","Preloader","posts","map","p","fullName","photos","large","id","reverse","formData","postText","connect","profilePage","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","value","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","onDoubleClick","isAuthUserProfile","contactTitle","contactValue","rel","href","target","toUpperCase","slice","maxLength80","error","contacts","key","push","Input","type","ProfileData","aboutMe","lookingForAJob","lookingForAJobDescription","length","onClick","savePhoto","saveProfile","files","initialValues","MyPostsContainer","compose","withRouter","authUserId","auth","isAuth","getProfile","getStatus","match","undefined","userId","setUserId","params","to"],"sourceRoot":""}