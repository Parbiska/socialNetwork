{"version":3,"file":"static/js/141.aaab8f97.chunk.js","mappings":"uKACA,GAAiB,ECAjB,EAAwB,uBAAxB,EAA4D,4BAA5D,EAAsG,6BAAtG,EAAmJ,+BCAnJ,GAAgB,KAAO,mBAAmB,KAAO,mBAAmB,IAAM,mB,SCY1E,EAXa,SAACA,GAAK,OACf,iBAAKC,UAAWC,EAAAA,KAAY,WACxB,gBAAKD,UAAWC,EAAAA,IAAYC,IAAI,wMAAwMC,IAAI,UAC5O,iBAAKH,UAAWC,EAAAA,KAAY,WACxB,gBAAKD,UAAWC,EAAAA,KAAY,mBAC3BF,EAAMK,SACP,qCAAaL,EAAMM,mBAErB,E,iDCHJC,GAAcC,EAAAA,EAAAA,IAAiB,IAa/BC,GAAgBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,WAAlBD,EAXL,SAAAV,GAEhB,OACC,kBAAMY,SAAUZ,EAAMa,aAAcZ,UAAWC,EAAkB,WAChE,SAACY,EAAA,EAAK,CAACC,SAAU,CAACC,EAAAA,GAAUT,GAAcU,QAAQ,WAAWC,UAAWC,EAAAA,EAAWC,KAAK,WAAWC,YAAY,eAAepB,UAAWC,KAEzI,mBAAQD,UAAWC,EAAqB,uBAG3C,IAoBA,EAhBgBoB,EAAAA,MAAW,SAAAtB,GAC1B,IAIMuB,EAAQvB,EAAMwB,MAAMD,MAAME,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAI,CAAYrB,QAASqB,EAAErB,QAASC,WAAYoB,EAAEpB,YAAxCoB,EAAEC,GAAyD,IAAEC,UAEjH,OACC,iBAAK3B,UAAWC,EAAa,WAC5B,sCACA,SAACO,EAAa,CAACG,SATA,SAAAiB,GAChB7B,EAAM8B,QAAQD,EAASE,SACxB,IAQGR,IAGJ,I,oBC9BA,GAAeS,EAAAA,EAAAA,KAFS,SAAAR,GAAK,MAAK,CAAEA,MAAOA,EAAMS,YAAa,GAEtB,CAAEH,QAAAA,EAAAA,IAA1C,CAAqDI,GCLrD,GAAgB,gBAAkB,qCAAqC,cAAgB,mCAAmC,aAAe,kCAAkC,YAAc,iCAAiC,WAAa,gCAAgC,WAAa,gCAAgC,UAAY,+BAA+B,SAAW,8BAA8B,eAAiB,qC,UCAzZ,EAAyB,8BC+BzB,EA7BsB,SAAAlC,GAElB,OAAkCmC,EAAAA,EAAAA,WAAS,GAAM,eAAzCC,EAAQ,KAAEC,EAAW,KAC7B,GAA8BF,EAAAA,EAAAA,UAASnC,EAAMsC,QAAO,eAA5CA,EAAM,KAAEC,EAAS,MAEzBC,EAAAA,EAAAA,YAAW,WACPD,EAAUvC,EAAMsC,OACpB,GAAG,CAACtC,EAAMsC,SAWV,OACI,gBAAKrC,UAAWC,EAAc,SACzBkC,GACG,kBAAOK,MAAOH,EAAQI,SALX,SAAAC,GAAC,OAAIJ,EAAUI,EAAEC,cAAcH,MAAO,EAKDI,WAAW,EAAMC,OAVlD,WACvBT,GAAY,GACZrC,EAAM+C,aAAaT,EACvB,KASY,iBAAMU,cAAehD,EAAMiD,kBAdd,WAAH,OAASZ,GAAY,EAAM,EAc6B,KAAK,SAAErC,EAAMsC,QAAU,YAIzG,EC4CA,EAtEoB,SAAAtC,GAChB,IAAKA,EAAMkD,QACP,OACI,gBAAKjD,UAAWC,EAAAA,UAAiB,UAC7B,SAACiD,EAAA,EAAS,MAKtB,IAAMD,EAAUlD,EAAMkD,QAChBE,EAAWF,EAAQE,SACnBC,EAAgB,GAEhBC,EAAO,SAACC,EAAMC,GAAI,OAAKH,EAAcC,MAAK,yBAC5C,cAAGG,IAAI,aAAaC,OAAO,SAASzD,UAAWC,EAAAA,eAAuBqD,KAAMA,EAAK,SAAEC,KAD9BA,GAElD,EAEP,IAAK,IAAMG,KAAOP,EACd,GAAsB,OAAlBA,EAASO,GACT,OAAQA,GACJ,IAAK,WACDL,EAAKF,EAASO,GAAM,YACpB,MACJ,IAAK,UACDL,EAAKF,EAASO,GAAM,WACpB,MACJ,IAAK,KACDL,EAAKF,EAASO,GAAM,MACpB,MACJ,IAAK,UACDL,EAAKF,EAASO,GAAM,WACpB,MACJ,IAAK,YACDL,EAAKF,EAASO,GAAM,aACpB,MACJ,IAAK,UACDL,EAAKF,EAASO,GAAM,WACpB,MACJ,IAAK,SACDL,EAAKF,EAASO,GAAM,UACpB,MACJ,IAAK,WACDL,EAAKF,EAASO,GAAM,YAOpC,OACI,iBAAK1D,UAAWC,EAAAA,KAAY,WACxB,gBAAKD,UAAWC,EAAAA,gBAAwBC,IAAI,sKAAsKC,IAAI,UACtN,iBAAKH,UAAWC,EAAAA,cAAqB,WACjC,gBAAKC,IAA8B,OAAzB+C,EAAQU,OAAOC,MAAiB,gGAAkGX,EAAQU,OAAOC,MAAOzD,IAAI,SAASH,UAAWC,EAAAA,gBAC1L,iBAAKD,UAAWC,EAAAA,YAAmB,WAC/B,gBAAKD,UAAWC,EAAAA,WAAkB,SAAEgD,EAAQY,WAAe,YACnD,SAAC,EAAa,CAACb,kBAAmBjD,EAAMiD,kBAAmBF,aAAc/C,EAAM+C,aAAcT,OAAQtC,EAAMsC,UACnH,kBAAM,aAEN,eAAIrC,UAAWC,EAAAA,SAAgB,SAC1BmD,IAEFH,EAAQa,eAAiB,oBAAsB,KAAI,KAAE,kBACrDb,EAAQc,0BAA4Bd,EAAQc,0BAA4B,aAK/F,EC3DA,EATgB,SAAAhE,GACZ,OACA,iBAAKC,UAAWC,EAAAA,QAAe,WAC3B,SAAC,EAAW,CAAC+C,kBAAmBjD,EAAMiD,kBAAmBX,OAAQtC,EAAMsC,OAAQS,aAAc/C,EAAM+C,aAAcG,QAASlD,EAAMkD,UAC/HlD,EAAMiD,mBAAoB,SAACgB,EAAgB,IAAK,OAGzD,E,oBCoBA,GAAeC,EAAAA,EAAAA,IAASC,EAAAA,GAAYnC,EAAAA,EAAAA,KAPZ,SAAAR,GAAK,MAAK,CAC9B0B,QAAS1B,EAAMS,YAAYiB,QAC3BZ,OAAQd,EAAMS,YAAYK,OAC1B8B,WAAY5C,EAAM6C,KAAK1C,GACvB2C,OAAQ9C,EAAM6C,KAAKC,OACtB,GAE4D,CAAEC,WAAAA,EAAAA,GAAYC,UAAAA,EAAAA,GAAWzB,aAAAA,EAAAA,KAAtF,EAxByB,SAAA/C,GAErB,OAA4BmC,EAAAA,EAAAA,eAASsC,GAAU,eAAxCC,EAAM,KAAEC,EAAS,KAExB,aAAuC3E,GAA/BwE,EAAS,EAATA,UAAWD,EAAU,EAAVA,WAUnB,OARA/B,EAAAA,EAAAA,YAAU,WACNmC,EAAU3E,EAAM4E,MAAMC,OAAOH,QAAU1E,EAAMoE,YACvCM,IACFH,EAAWG,GACXF,EAAUE,GAElB,GAAG,CAAEA,EAAQ1E,EAAM4E,MAAMC,OAAOH,OAAQ1E,EAAMoE,WAAYI,EAAWD,KAE9D,SAAC,GAAO,QAACjC,OAAQtC,EAAMsC,OAAQS,aAAc/C,EAAM+C,aAAcE,kBAAmByB,IAAW1E,EAAMoE,YAAgBpE,GAChI,G","sources":["components/Profile/Profile.module.css","webpack://first/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://first/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://first/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","webpack://first/./src/components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css?c3a9","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__rgwDA\",\"posts__new\":\"MyPosts_posts__new__rXHGW\",\"posts__area\":\"MyPosts_posts__area__Q644n\",\"posts__button\":\"MyPosts_posts__button__eGtFW\",\"posts__button_reset\":\"MyPosts_posts__button_reset__vktoK\"};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__d8mXi\",\"name\":\"Post_name__ptd5p\",\"img\":\"Post_img__PUxlt\"};","import styles from './Post.module.css';\r\n\r\nconst Post = (props) => (\r\n    <div className={styles.post}>\r\n        <img className={styles.img} src=\"https://store.playstation.com/store/api/chihiro/00_09_000/container/RU/ru/99/EP2402-CUSA05624_00-AV00000000000193/0/image?_version=00_09_000&platform=chihiro&bg_color=000000&opacity=100&w=720&h=720\" alt=\"user\" />\r\n        <div className={styles.text}>\r\n            <div className={styles.name}>Demid</div>\r\n            {props.message}\r\n            <div>Likes: {props.likesCount}</div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Post;","import styles from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { formField } from '../../common/FormsControls/FormsControls';\r\nimport React from 'react';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst PostForm = props => {\r\n\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit} className={styles.posts__new}>\r\n\t\t\t<Field validate={[required, maxLength50]} element='textarea' component={formField} name='postText' placeholder=\"your news...\" className={styles.posts__area}></Field>\r\n\t\t\t{/* <button type='reset' className={`${styles.posts__button} ${styles.posts__button_reset}`}>Reset</button> */}\r\n\t\t\t<button className={styles.posts__button}>Publish</button>\r\n\t\t</form>\r\n\t)\r\n};\r\n\r\nconst PostReduxForm = reduxForm({ form: 'newPost' })(PostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n\tconst onSubmit = formData => {\r\n\t\tprops.addPost(formData.postText);\r\n\t}\r\n\r\n\tconst posts = props.state.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}></Post>).reverse();\r\n\r\n\treturn (\r\n\t\t<div className={styles.posts}>\r\n\t\t\t<h2>My posts</h2>\r\n\t\t\t<PostReduxForm onSubmit={onSubmit}></PostReduxForm>\r\n\t\t\t{posts}\r\n\t\t</div>\r\n\t);\r\n});\r\n\r\nexport default MyPosts;","import MyPosts from './MyPosts';\r\nimport { addPost } from '../../../redux/profileReducer';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => ({ state: state.profilePage });\r\n\r\nexport default connect(mapStateToProps, { addPost })(MyPosts);","// extracted by mini-css-extract-plugin\nexport default {\"info__wallpaper\":\"ProfileInfo_info__wallpaper__PLhRe\",\"info__wrapper\":\"ProfileInfo_info__wrapper__vWwIP\",\"info__avatar\":\"ProfileInfo_info__avatar__0voMh\",\"info__descr\":\"ProfileInfo_info__descr__KwWDe\",\"info__name\":\"ProfileInfo_info__name__UrlHt\",\"info__link\":\"ProfileInfo_info__link__5o4ML\",\"preloader\":\"ProfileInfo_preloader__24iO7\",\"contacts\":\"ProfileInfo_contacts__edtjr\",\"contacts__Item\":\"ProfileInfo_contacts__Item__qIArc\"};","// extracted by mini-css-extract-plugin\nexport default {\"status\":\"ProfileStatus_status__sESij\"};","import { useState, useEffect } from 'react';\r\nimport styles from './ProfileStatus.module.css';\r\n\r\nconst ProfileStatus = props => {\r\n\r\n    const [ editMode, setEditMode ] = useState(false);\r\n    const [ status, setStatus ] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => setEditMode(true);\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = e => setStatus(e.currentTarget.value);\r\n\r\n    return (\r\n        <div className={styles.status}>\r\n            {editMode ?\r\n                <input value={status} onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}/>\r\n                :\r\n                <span onDoubleClick={props.isAuthUserProfile ? activateEditMode : null}>{props.status || '------'}</span>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileStatus;","import styles from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\r\n\r\nconst ProfileInfo = props => {\r\n    if (!props.profile) {\r\n        return (\r\n            <div className={styles.preloader}>\r\n                <Preloader></Preloader>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const profile = props.profile;\r\n    const contacts = profile.contacts;\r\n    const contactsItems = [];\r\n\r\n    const push = (href, text) => contactsItems.push(<li key={text}>\r\n        <a rel=\"noreferrer\" target='_blank' className={styles.contacts__Item} href={href}>{text}</a>\r\n    </li>);\r\n\r\n    for (const key in contacts) {\r\n        if (contacts[key] !== null) {\r\n            switch (key) {\r\n                case 'facebook':\r\n                    push(contacts[key], 'Facebook');\r\n                    break;\r\n                case 'website':\r\n                    push(contacts[key], 'Website');\r\n                    break;\r\n                case 'vk':\r\n                    push(contacts[key], 'VK');\r\n                    break;\r\n                case 'twitter':\r\n                    push(contacts[key], 'Twitter');\r\n                    break;\r\n                case 'Instagram':\r\n                    push(contacts[key], 'Instagram');\r\n                    break;\r\n                case 'youtube':\r\n                    push(contacts[key], 'Youtube');\r\n                    break;\r\n                case 'github':\r\n                    push(contacts[key], 'Github');\r\n                    break;\r\n                case 'mainLink':\r\n                    push(contacts[key], 'MainLink');\r\n                    break;\r\n                default:\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.info}>\r\n            <img className={styles.info__wallpaper} src=\"https://helpx.adobe.com/content/dam/help/en/photoshop/using/convert-color-image-black-white/jcr_content/main-pars/before_and_after/image-before/Landscape-Color.jpg\" alt='user' />\r\n            <div className={styles.info__wrapper}>\r\n                <img src={profile.photos.large === null ? 'https://www.directivegroup.com/wp-content/uploads/2017/03/smile-9047-9380-hd-wallpapers-1.jpg' : profile.photos.large} alt=\"avatar\" className={styles.info__avatar} />\r\n                <div className={styles.info__descr}>\r\n                    <div className={styles.info__name}>{profile.fullName}</div>\r\n                    Status: <ProfileStatus isAuthUserProfile={props.isAuthUserProfile} updateStatus={props.updateStatus} status={props.status}></ProfileStatus>\r\n                    <br />\r\n                    Contacts:\r\n                    <ul className={styles.contacts}>\r\n                        {contactsItems}\r\n                    </ul>\r\n                    {!!profile.lookingForAJob ? 'Looking for a job' : null} <br />\r\n                    {!!profile.lookingForAJobDescription ? profile.lookingForAJobDescription : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;","import styles from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = props => {\r\n    return (\r\n    <div className={styles.profile}>\r\n        <ProfileInfo isAuthUserProfile={props.isAuthUserProfile} status={props.status} updateStatus={props.updateStatus} profile={props.profile}></ProfileInfo>\r\n        {props.isAuthUserProfile ? <MyPostsContainer/> : null}\r\n    </div>\r\n);\r\n};\r\n\r\nexport default Profile;","import Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getProfile, getStatus, updateStatus } from './../../redux/profileReducer';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from '../../hoc/WithRouter';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst ProfileContainer = props => {\r\n\r\n    const [userId, setUserId] = useState(undefined);\r\n\r\n    const { getStatus, getProfile } = { ...props};\r\n\r\n    useEffect(() => {\r\n        setUserId(props.match.params.userId || props.authUserId);\r\n        if (!!userId) {\r\n            getProfile(userId);\r\n            getStatus(userId);\r\n        } \r\n    }, [ userId, props.match.params.userId, props.authUserId, getStatus, getProfile ]);\r\n\r\n    return <Profile status={props.status} updateStatus={props.updateStatus} isAuthUserProfile={userId === props.authUserId} {...props}></Profile>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose( withRouter, connect(mapStateToProps, { getProfile, getStatus, updateStatus }))(ProfileContainer);"],"names":["props","className","styles","src","alt","message","likesCount","maxLength50","maxLengthCreator","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","element","component","formField","name","placeholder","React","posts","state","map","p","id","reverse","formData","addPost","postText","connect","profilePage","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","value","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","onDoubleClick","isAuthUserProfile","profile","Preloader","contacts","contactsItems","push","href","text","rel","target","key","photos","large","fullName","lookingForAJob","lookingForAJobDescription","MyPostsContainer","compose","withRouter","authUserId","auth","isAuth","getProfile","getStatus","undefined","userId","setUserId","match","params"],"sourceRoot":""}